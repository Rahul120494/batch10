pipeline{
    
        agent any
    
        stages{
            stage('SCM'){
                steps{
                    git 'https://github.com/Rahul120494/batch10.git'
                }
            }
            
            stage("Sonar scan of source code") {
              steps {
                  withSonarQubeEnv('sonarqube') {
                     sh 'mvn clean package sonar:sonar'
                  }
              }
            }
                    
            stage('publish report'){
                steps {
                    junit allowEmptyResults: true, skipPublishingChecks: true, testResults: '*/target/surefire-reports/*.xml'
                }
            }
            
            stage('docker build'){
                steps{
                    echo 'starting docker build'
                    sh "docker build . -t rahul120494/springboottest:1.1.1 "
                }
            }
            
            stage('docker image push'){
                steps{
                    withCredentials([string(credentialsId: 'dockerId', variable: 'dockerPassword')]) {
                        sh "docker login -u rahul120494 -p ${dockerPassword} "
                }
                    sh "docker push rahul120494/springboottest:1.1.1 "
                }
            }
            
            stage('docker image deploy'){
                steps{
                  ansiblePlaybook become: true, credentialsId: 'rahul', disableHostKeyChecking: true, installation: 'ansible', playbook: 'deploy.yml'
                }
            }
        }
        post {  
             success {  
                 echo "job completed successfully"
             }  
             failure {  
                 emailext body: ' "<b>devops</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: \'\', charset: \'UTF-8\', from: \'\', mimeType: \'text/html\'', subject: '"ERROR CI: Project name -> ${env.JOB_NAME}"', to: 'rahul.bastia007@gmail.com'
             }  
             unstable {  
                 echo 'The run was marked as unstable'  
             }  
             changed {  
                 echo 'The Pipeline status has changed'  
             }  
        }
 }
